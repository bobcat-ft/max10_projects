	cx_system u0 (
		.altpll_0_locked_conduit_export      (<connected-to-altpll_0_locked_conduit_export>),      // altpll_0_locked_conduit.export
		.bme_input_data                      (<connected-to-bme_input_data>),                      //               bme_input.data
		.bme_input_error                     (<connected-to-bme_input_error>),                     //                        .error
		.bme_input_valid                     (<connected-to-bme_input_valid>),                     //                        .valid
		.bme_output_data                     (<connected-to-bme_output_data>),                     //              bme_output.data
		.bme_output_error                    (<connected-to-bme_output_error>),                    //                        .error
		.bme_output_valid                    (<connected-to-bme_output_valid>),                    //                        .valid
		.cfg_input_data                      (<connected-to-cfg_input_data>),                      //               cfg_input.data
		.cfg_input_error                     (<connected-to-cfg_input_error>),                     //                        .error
		.cfg_input_valid                     (<connected-to-cfg_input_valid>),                     //                        .valid
		.cfg_output_data                     (<connected-to-cfg_output_data>),                     //              cfg_output.data
		.cfg_output_error                    (<connected-to-cfg_output_error>),                    //                        .error
		.cfg_output_valid                    (<connected-to-cfg_output_valid>),                    //                        .valid
		.clk_clk                             (<connected-to-clk_clk>),                             //                     clk.clk
		.control_conduit_busy_out            (<connected-to-control_conduit_busy_out>),            //         control_conduit.busy_out
		.fe_ics52000_0_cfg_input_data        (<connected-to-fe_ics52000_0_cfg_input_data>),        // fe_ics52000_0_cfg_input.data
		.fe_ics52000_0_cfg_input_error       (<connected-to-fe_ics52000_0_cfg_input_error>),       //                        .error
		.fe_ics52000_0_cfg_input_valid       (<connected-to-fe_ics52000_0_cfg_input_valid>),       //                        .valid
		.fpga_control_conduit_busy_out       (<connected-to-fpga_control_conduit_busy_out>),       //    fpga_control_conduit.busy_out
		.fpga_rj45_interface_serial_data_in  (<connected-to-fpga_rj45_interface_serial_data_in>),  //     fpga_rj45_interface.serial_data_in
		.fpga_rj45_interface_serial_data_out (<connected-to-fpga_rj45_interface_serial_data_out>), //                        .serial_data_out
		.fpga_rj45_interface_serial_clk_out  (<connected-to-fpga_rj45_interface_serial_clk_out>),  //                        .serial_clk_out
		.fpga_serial_clk_clk                 (<connected-to-fpga_serial_clk_clk>),                 //         fpga_serial_clk.clk
		.i2c_clk_clk                         (<connected-to-i2c_clk_clk>),                         //                 i2c_clk.clk
		.ics52000_physical_mic_data_in       (<connected-to-ics52000_physical_mic_data_in>),       //       ics52000_physical.mic_data_in
		.ics52000_physical_mic_ws_out        (<connected-to-ics52000_physical_mic_ws_out>),        //                        .mic_ws_out
		.ics52000_physical_clk               (<connected-to-ics52000_physical_clk>),               //                        .clk
		.led_output_led_sd                   (<connected-to-led_output_led_sd>),                   //              led_output.led_sd
		.led_output_led_ws                   (<connected-to-led_output_led_ws>),                   //                        .led_ws
		.mic_output_channel                  (<connected-to-mic_output_channel>),                  //              mic_output.channel
		.mic_output_data                     (<connected-to-mic_output_data>),                     //                        .data
		.mic_output_error                    (<connected-to-mic_output_error>),                    //                        .error
		.mic_output_valid                    (<connected-to-mic_output_valid>),                    //                        .valid
		.pll_mclk_clk                        (<connected-to-pll_mclk_clk>),                        //                pll_mclk.clk
		.reset_reset_n                       (<connected-to-reset_reset_n>),                       //                   reset.reset_n
		.rgb_input_data                      (<connected-to-rgb_input_data>),                      //               rgb_input.data
		.rgb_input_error                     (<connected-to-rgb_input_error>),                     //                        .error
		.rgb_input_valid                     (<connected-to-rgb_input_valid>),                     //                        .valid
		.rgb_output_data                     (<connected-to-rgb_output_data>),                     //              rgb_output.data
		.rgb_output_error                    (<connected-to-rgb_output_error>),                    //                        .error
		.rgb_output_valid                    (<connected-to-rgb_output_valid>),                    //                        .valid
		.rj45_interface_serial_data_in       (<connected-to-rj45_interface_serial_data_in>),       //          rj45_interface.serial_data_in
		.rj45_interface_serial_data_out      (<connected-to-rj45_interface_serial_data_out>),      //                        .serial_data_out
		.serial_clk_clk                      (<connected-to-serial_clk_clk>),                      //              serial_clk.clk
		.ics52000_mic_output_channel         (<connected-to-ics52000_mic_output_channel>),         //     ics52000_mic_output.channel
		.ics52000_mic_output_data            (<connected-to-ics52000_mic_output_data>),            //                        .data
		.ics52000_mic_output_error           (<connected-to-ics52000_mic_output_error>),           //                        .error
		.ics52000_mic_output_valid           (<connected-to-ics52000_mic_output_valid>),           //                        .valid
		.mic_input_data                      (<connected-to-mic_input_data>),                      //               mic_input.data
		.mic_input_channel                   (<connected-to-mic_input_channel>),                   //                        .channel
		.mic_input_error                     (<connected-to-mic_input_error>),                     //                        .error
		.mic_input_valid                     (<connected-to-mic_input_valid>)                      //                        .valid
	);

